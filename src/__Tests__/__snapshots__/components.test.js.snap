// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Components Tests Calculator.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex flex-column align-items-center w-100"
      >
        <h1
          class="fw-bold fs-1 orange mt-5 text-decoration-underline"
        >
          Lets do some math!!
        </h1>
        <div
          class="calculator mt-5 border border-5 border-light shadow-lg"
        >
          <input
            class="quote"
            data-testid="result"
            placeholder="0"
            readonly=""
            value="0"
          />
          <div
            class="buttons"
          >
            <div
              class="number-section"
            >
              <button
                class="number"
                type="button"
              >
                AC
              </button>
              <button
                class="number"
                type="button"
              >
                +/-
              </button>
              <button
                class="number"
                type="button"
              >
                %
              </button>
              <button
                class="number"
                type="button"
              >
                7
              </button>
              <button
                class="number"
                type="button"
              >
                8
              </button>
              <button
                class="number"
                type="button"
              >
                9
              </button>
              <button
                class="number"
                type="button"
              >
                4
              </button>
              <button
                class="number"
                type="button"
              >
                5
              </button>
              <button
                class="number"
                type="button"
              >
                6
              </button>
              <button
                class="number"
                type="button"
              >
                1
              </button>
              <button
                class="number"
                type="button"
              >
                2
              </button>
              <button
                class="number"
                type="button"
              >
                3
              </button>
              <button
                class="number"
                type="button"
              >
                0
              </button>
              <button
                class="number"
                type="button"
              >
                .
              </button>
            </div>
            <div
              class="operation-section"
            >
              <button
                class="operation"
                type="button"
              >
                รท
              </button>
              <button
                class="operation"
                type="button"
              >
                x
              </button>
              <button
                class="operation"
                type="button"
              >
                -
              </button>
              <button
                class="operation"
                type="button"
              >
                +
              </button>
              <button
                class="operation"
                type="button"
              >
                =
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex flex-column align-items-center w-100"
    >
      <h1
        class="fw-bold fs-1 orange mt-5 text-decoration-underline"
      >
        Lets do some math!!
      </h1>
      <div
        class="calculator mt-5 border border-5 border-light shadow-lg"
      >
        <input
          class="quote"
          data-testid="result"
          placeholder="0"
          readonly=""
          value="0"
        />
        <div
          class="buttons"
        >
          <div
            class="number-section"
          >
            <button
              class="number"
              type="button"
            >
              AC
            </button>
            <button
              class="number"
              type="button"
            >
              +/-
            </button>
            <button
              class="number"
              type="button"
            >
              %
            </button>
            <button
              class="number"
              type="button"
            >
              7
            </button>
            <button
              class="number"
              type="button"
            >
              8
            </button>
            <button
              class="number"
              type="button"
            >
              9
            </button>
            <button
              class="number"
              type="button"
            >
              4
            </button>
            <button
              class="number"
              type="button"
            >
              5
            </button>
            <button
              class="number"
              type="button"
            >
              6
            </button>
            <button
              class="number"
              type="button"
            >
              1
            </button>
            <button
              class="number"
              type="button"
            >
              2
            </button>
            <button
              class="number"
              type="button"
            >
              3
            </button>
            <button
              class="number"
              type="button"
            >
              0
            </button>
            <button
              class="number"
              type="button"
            >
              .
            </button>
          </div>
          <div
            class="operation-section"
          >
            <button
              class="operation"
              type="button"
            >
              รท
            </button>
            <button
              class="operation"
              type="button"
            >
              x
            </button>
            <button
              class="operation"
              type="button"
            >
              -
            </button>
            <button
              class="operation"
              type="button"
            >
              +
            </button>
            <button
              class="operation"
              type="button"
            >
              =
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components Tests Home.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="text-center"
      >
        <h1
          class="fw-bold fs-1 orange mt-5 text-decoration-underline"
        >
          Welcome to our page
        </h1>
        <p
          class="mt-5 fs-5"
        >
          In this website, you will be able to use our incredible Calculator!
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="text-center"
    >
      <h1
        class="fw-bold fs-1 orange mt-5 text-decoration-underline"
      >
        Welcome to our page
      </h1>
      <p
        class="mt-5 fs-5"
      >
        In this website, you will be able to use our incredible Calculator!
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Components Tests Quote.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="fs-3 text-center text-decoration-underline fw-bold d-flex justify-content-center mt-5"
      >
        <p
          class="orange"
        >
          Mathematics is not about numbers, equations, computations, or algorithms. It is about understanding. - William Paul Thurston
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="fs-3 text-center text-decoration-underline fw-bold d-flex justify-content-center mt-5"
    >
      <p
        class="orange"
      >
        Mathematics is not about numbers, equations, computations, or algorithms. It is about understanding. - William Paul Thurston
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
